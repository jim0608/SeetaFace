import com.plugin.versionplugin.*

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.plugin.version' apply false
}
android {
    compileSdkVersion BuildConfig.compileSdkVersion
    buildToolsVersion BuildConfig.buildToolsVersion

    defaultConfig {
        minSdkVersion BuildConfig.minSdkVersion
        targetSdkVersion BuildConfig.targetSdkVersion
        versionCode BuildConfig.versionCode
        versionName BuildConfig.versionName

        testInstrumentationRunner BuildConfig.testInstrumentationRunner
        consumerProguardFiles BuildConfig.consumerProguardFiles

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    
    android {
        dataBinding {
            enabled = true
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation BuildConfig.kt_stdlib
    implementation AndroidX.coreKtx
    implementation AndroidX.appcompat
    implementation Google.material
    testImplementation Testing.junit
    androidTestImplementation Testing.androidJunit
    androidTestImplementation Testing.espresso


    implementation AndroidX.constraintlayout

    implementation AndroidX.Lifecycle.viewModel
    implementation AndroidX.Lifecycle.runtime
    implementation AndroidX.Lifecycle.extensions

    //Room
    implementation AndroidX.Room.ktx
    implementation AndroidX.Room.runtime
    kapt AndroidX.Room.compiler

    //图片加载
    implementation ThirdDepend.Glide.glide

    // rxjava
    implementation ThirdDepend.rxjava2
    implementation ThirdDepend.rxandroid

    //OKHTTP
    implementation ThirdDepend.OkHttp.okhttp
    implementation ThirdDepend.OkHttp.loggingInterceptor
    //Gson
    implementation Google.gson
    //协程
    implementation ThirdDepend.Coroutines.coroutines_core
    implementation ThirdDepend.Coroutines.coroutines_android

    //数据存储
    implementation ThirdDepend.mmkv
    //ARouter
    implementation ThirdDepend.arouter_api
    kapt ThirdDepend.arouter_compiler
    // crash dump
    implementation ThirdDepend.XCrash

}
